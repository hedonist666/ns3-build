name: Build Release
on: [ push, pull_request ]
jobs:
  create-release:
    runs-on: 'ubuntu-22.04'
    outputs:
      upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create-release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: ncipollo/release-action@v1
        with:
          omitBody: true
          prerelease: true
          token: ${{ secrets.GITHUB_TOKEN }}
  build:
    runs-on: ${{ matrix.os }}
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-22.04 ]
        platform:
          - 'linux-x64'
          - 'linux-armv6'
          - 'linux-armv7'
        include:
          - os: macos-11
            platform: 'darwin-x64'
          - os: macos-11
            platform: 'darwin-arm64v8'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build ${{ matrix.platform }}
        id: build-release
        run: ./build.sh 3.29 ${{ matrix.platform }}
      - name: Upload Release Asset (.tar.gz)
        id: upload-release-asset-gz
        if: startsWith(github.ref, 'refs/tags/v')
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: ${{ matrix.platform }}.tar.gz
          artifactContentType: application/gzip
          artifactErrorsFailBuild: true
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          prerelease: true
          token: ${{ secrets.GITHUB_TOKEN }}
